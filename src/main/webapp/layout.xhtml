<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      lang="pt-BR"
      class="light-style layout-menu-fixed"
      dir="ltr"
      data-theme="theme-default"
      data-assets-path="assets/"
      data-template="vertical-menu-template-free"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core">
    <h:head>
        <meta charset="utf-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0"
            />

        <title>TeorBrain</title>

        <meta name="description" content="" />

        <!-- Favicon -->
        <!--        <link rel="icon" type="image/x-icon" href="assets/img/favicon/favicon.ico" />-->

        <link rel="shortcut icon" href="assets/img/favicon/Cerurb.png" />

        <!-- Fonts -->

        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"/>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700display=swap"/>
        <link href="assets/css/style.css" rel="stylesheet" type="text/css"/>
        <!-- Icons. Uncomment required icon fonts -->
        <link rel="stylesheet" href="assets/vendor/fonts/boxicons.css" />

        <!-- Core CSS -->
        <link rel="stylesheet" href="assets/vendor/css/core.css" class="template-customizer-core-css" />
        <link rel="stylesheet" href="assets/vendor/css/theme-default.css" class="template-customizer-theme-css" />
        <link rel="stylesheet" href="assets/css/demo.css" />

        <!-- Vendors CSS -->
        <link rel="stylesheet" href="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />

        <link rel="stylesheet" href="assets/vendor/libs/apex-charts/apex-charts.css" />

        <!-- Page CSS -->

        <!-- Helpers -->
        <script src="assets/vendor/js/helpers.js"></script>

        <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
        <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
        <script src="assets/js/config.js"></script>
        <script src="#{resource['js:leaflet.js']}"></script>
        <script src="#{resource['js:leaflet.textpath.js']}"></script>
        <script src="#{resource['js:leaflet-image.js']}"></script>
        <script src="#{resource['js:markercluster.js']}"></script>
        <script src="#{resource['js:Control.MiniMap.min.js']}"></script>
        <script src="#{resource['js:L.Icon.Pulse.js']}"></script>

        <link rel="stylesheet" href="#{resource['css:L.Icon.Pulse.css']}" />
        <link rel="stylesheet" href="#{resource['css:leaflet.css']}" />
        <link rel="stylesheet" href="#{resource['css:markercluster.css']}" />
        <link rel="stylesheet" href="#{resource['css:Control.MiniMap.min.css']}" />
        <link rel="stylesheet" href="#{resource['css:galeriaEditar.css']}" />
        <!-- Include the Quill library -->
        <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

        <!-- Initialize Quill editor -->
        <script>

            var ferramentas = [
                [{'header': [1, 2, 3, 4, 5, 6]}],
                ['bold', 'italic', 'underline', 'strike', {'script': 'super'}, {'script': 'sub'}, 'clean'],
                [{'color': []}, {'background': []}],
                [{'align': []}],
                [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '+1'}, {'indent': '-1'}],
                ['link', 'image', 'code', {'direction': 'rtl'}],
                [{'font': []}],
                [{'size': ['small', false, 'large', 'huge']}]

            ];
            var quill = new Quill('#editor', {
                theme: 'snow',
                modules: {
                    toolbar: ferramentas
                }
            });

            //codigo usado para visualizar o texto  

            var url = window.location.href;
            var valorDaDiv = document.getElementById("editor");

            if (url.includes("visualizar")) {
                document.getElementsByClassName('ql-editor')[0].innerHTML = document.getElementsByClassName('textoDoDocumento')[0].value;
                quill.enable(false);
            } else if (url.includes("editar")) {
                if (valorDaDiv.innerHTML != null) {
                    document.getElementsByClassName('ql-editor')[0].innerHTML = document.getElementsByClassName('textoDoDocumento')[0].value;
                }
                quill.enable(true);
            } else {
                quill.enable(true);
            }

            function processarValorEditor() {
                //valor preenchido no editor quill é enviado para 
                //um input e processado para ser salvar no banco
                var valorDaDiv = $(".ql-editor").html();
                document.getElementsByClassName('textoDoDocumento')[0].value = valorDaDiv + "";
                console.log(document.getElementsByClassName('textoDoDocumento')[0].value);
            }


            function executarScript() {
                PF('statusDialog').show();

                // Simule uma operação assíncrona com um atraso de 1 segundo
                setTimeout(function () {
                    PF('statusDialog').hide();
                }, 1000);
            }

        </script>
    </h:head>
    <h:body   onload="executarScript()" >

        <p:dialog widgetVar="statusDialog"
                  modal="true"
                  draggable="false"
                  closable="false"
                  resizable="false"
                  showHeader="false"
                  style="overflow: hidden !important; border-radius: 10%;">
            <div style="display: flex;align-items: center;justify-content: center;text-align: center; padding-top: 20px"> 
                <center>
                    <i class="pi pi-spin pi-spinner loading-icon p-text-center" style="font-size: 37px; margin-bottom: 12px; margin-right: 4px" aria-hidden="false"></i>
                    <nav class="p-my-md-2">
                        Carregando...
                    </nav>
                </center>
            </div>

        </p:dialog>
        <p:ajaxStatus onstart="PF('statusDialog').show()"  onsuccess="PF('statusDialog').hide()"/>

        <!-- Layout wrapper -->
        <div class="layout-wrapper layout-content-navbar">
            <div class="layout-container">
                <!-- Menu -->

                <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme" >
                    <div class="app-brand demo">
                        <a href="index.xhtml" class="app-brand-link">
                            <span class="app-brand-logo demo">
                                <img src="img/logoPhb.jpg" style="width:220px;"/>

                                <defs>

                                    <path
                                        d="M13.7918663,0.358365126 L3.39788168,7.44174259 C0.566865006,9.69408886 -0.379795268,12.4788597 0.557900856,15.7960551 C0.68998853,16.2305145 1.09562888,17.7872135 3.12357076,19.2293357 C3.8146334,19.7207684 5.32369333,20.3834223 7.65075054,21.2172976 L7.59773219,21.2525164 L2.63468769,24.5493413 C0.445452254,26.3002124 0.0884951797,28.5083815 1.56381646,31.1738486 C2.83770406,32.8170431 5.20850219,33.2640127 7.09180128,32.5391577 C8.347334,32.0559211 11.4559176,30.0011079 16.4175519,26.3747182 C18.0338572,24.4997857 18.6973423,22.4544883 18.4080071,20.2388261 C17.963753,17.5346866 16.1776345,15.5799961 13.0496516,14.3747546 L10.9194936,13.4715819 L18.6192054,7.984237 L13.7918663,0.358365126 Z"
                                        id="path-1"
                                        ></path>
                                    <path
                                        d="M5.47320593,6.00457225 C4.05321814,8.216144 4.36334763,10.0722806 6.40359441,11.5729822 C8.61520715,12.571656 10.0999176,13.2171421 10.8577257,13.5094407 L15.5088241,14.433041 L18.6192054,7.984237 C15.5364148,3.11535317 13.9273018,0.573395879 13.7918663,0.358365126 C13.5790555,0.511491653 10.8061687,2.3935607 5.47320593,6.00457225 Z"
                                        id="path-3"
                                        ></path>
                                    <path
                                        d="M7.50063644,21.2294429 L12.3234468,23.3159332 C14.1688022,24.7579751 14.397098,26.4880487 13.008334,28.506154 C11.6195701,30.5242593 10.3099883,31.790241 9.07958868,32.3040991 C5.78142938,33.4346997 4.13234973,34 4.13234973,34 C4.13234973,34 2.75489982,33.0538207 2.37032616e-14,31.1614621 C-0.55822714,27.8186216 -0.55822714,26.0572515 -4.05231404e-15,25.8773518 C0.83734071,25.6075023 2.77988457,22.8248993 3.3049379,22.52991 C3.65497346,22.3332504 5.05353963,21.8997614 7.50063644,21.2294429 Z"
                                        id="path-4"
                                        ></path>
                                    <path
                                        d="M20.6,7.13333333 L25.6,13.8 C26.2627417,14.6836556 26.0836556,15.9372583 25.2,16.6 C24.8538077,16.8596443 24.4327404,17 24,17 L14,17 C12.8954305,17 12,16.1045695 12,15 C12,14.5672596 12.1403557,14.1461923 12.4,13.8 L17.4,7.13333333 C18.0627417,6.24967773 19.3163444,6.07059163 20.2,6.73333333 C20.3516113,6.84704183 20.4862915,6.981722 20.6,7.13333333 Z"
                                        id="path-5"
                                        ></path>
                                </defs>
                                <g id="g-app-brand" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                    <g id="Brand-Logo" transform="translate(-27.000000, -15.000000)">
                                        <g id="Icon" transform="translate(27.000000, 15.000000)">
                                            <g id="Mask" transform="translate(0.000000, 8.000000)">
                                                <mask id="mask-2" fill="white">
                                                    <!--<use xlink:href="#path-1"></use>-->
                                                </mask>
                                                <!--<use fill="#696cff" xlink:href="#path-1"></use>-->
                                                <g id="Path-3" mask="url(#mask-2)">
                                                    <!--<use fill="#696cff" xlink:href="#path-3"></use>-->
                                                    <!--<use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-3"></use>-->
                                                </g>
                                                <g id="Path-4" mask="url(#mask-2)">
                                                    <!--<use fill="#696cff" xlink:href="#path-4"></use>-->
                                                    <!--<use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-4"></use>-->
                                                </g>
                                            </g>
                                            <g
                                                id="Triangle"
                                                transform="translate(19.000000, 11.000000) rotate(-300.000000) translate(-19.000000, -11.000000) "
                                                >
                                                <!--<use fill="#696cff" xlink:href="#path-5"></use>-->
                                                <!--<use fill-opacity="0.2" fill="#FFFFFF" xlink:href="#path-5"></use>-->
                                            </g>
                                        </g>
                                    </g>
                                </g>
                                <!--</svg>-->
                            </span>
                            <!--                            <div style="display: flex;flex-direction: column;text-align: center !important;;margin: auto">
                                                            <span class=" demo menu-text fw-bolder ms-2" style="font-size: 18px;font-weight: 400 !important; font-family: Open Sans, sans-serif;color: #003882;margin-bottom: 2px">Cerurb Pro</span>
                                                            <span class=" demo menu-text fw-bolder ms-2" style="font-size: 9px;font-weight: 400 !important; font-family: Open Sans, sans-serif;color: #003882">Tecnologia Fundiária
                            
                                                            </span>
                                                        </div>-->
                        </a>

                        <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto d-block d-xl-none">
                            <i class="bx bx-chevron-left bx-sm align-middle"></i>
                        </a>
                    </div>

                    <div class="menu-inner-shadow"></div>

                    <ul class="menu-inner py-1">
                        <!-- Dashboard -->
                        <li class="menu-item" id="menuInicio">
                            <a href="index.xhtml" class="menu-link">
                                <i class="menu-icon tf-icons bx bx-home-circle"></i>
                                <div data-i18n="Analytics">Inicio</div>
                            </a>
                        </li>

                        <h:panelGroup rendered="#{managerLayout.renderedUserGestor()}">
                            <li class="menu-header small text-uppercase">
                                <span class="menu-header-text">Cidadão</span>
                            </li>
                            <li class="menu-item" id="itemNovaConsulta">
                                <a href="cidadao.xhtml" class="menu-link">
                                    <i class="menu-icon tf-icons pi pi-plus-circle"></i>
                                    <div data-i18n="Without navbar">Novo Cadastro</div>
                                </a>
                            </li>
                            <li class="menu-item" id="itemRegistros">
                                <a href="pesquisarCidadao.xhtml" class="menu-link">
                                    <i class="menu-icon tf-icons bi bi-search"></i>
                                    <div data-i18n="Without navbar">Pesquisar</div>
                                </a>
                            </li>
                        </h:panelGroup>
                        
                        <h:panelGroup rendered="#{managerLayout.renderedUserCidadao()}">
                            <li class="menu-header small text-uppercase">
                                <span class="menu-header-text">Perfil</span>
                            </li>
                            <li class="menu-item" id="itemNovaConsulta">
                                <a href="perfilCidadao.xhtml?view=#{managerLayout.usuarioLogado.cidadao.id}" class="menu-link">
                                    <i class="menu-icon tf-icons pi pi-user"></i>
                                    <div data-i18n="Without navbar">Meu Perfil</div>
                                </a>
                            </li>
                        </h:panelGroup>

                        <li class="menu-header small text-uppercase">
                            <span class="menu-header-text">Solicitação</span>
                        </li>
                        <li class="menu-item" id="itemCadastrarNucleo">
                            <a href="solicitacao.xhtml" class="menu-link">
                                <i class="menu-icon tf-icons pi pi-plus-circle"></i>
                                <div data-i18n="Without navbar">Nova Solicitação</div>
                            </a>
                        </li>
                        <li class="menu-item" id="itemPesquisarNucleo">
                            <a href="pesquisarSolicitacao.xhtml" class="menu-link">
                                <i class="menu-icon tf-icons bi bi-search"></i>
                                <div data-i18n="Without navbar">Pesquisar</div>
                            </a>
                        </li>

                        <h:panelGroup rendered="#{managerLayout.renderedUserAdmin()}">
                            <li class="menu-header small text-uppercase">
                                <span class="menu-header-text">Gestores</span>
                            </li>
                            <li class="menu-item" id="itemCadastrarNucleo">
                                <a href="gestor.xhtml" class="menu-link">
                                    <i class="menu-icon tf-icons pi pi-plus-circle"></i>
                                    <div data-i18n="Without navbar">Nova Cadastro</div>
                                </a>
                            </li>
                            <li class="menu-item" id="itemPesquisarNucleo">
                                <a href="pesquisarGestor.xhtml" class="menu-link">
                                    <i class="menu-icon tf-icons bi bi-search"></i>
                                    <div data-i18n="Without navbar">Pesquisar</div>
                                </a>
                            </li>
                        </h:panelGroup>

                    </ul>
                </aside>
                <!-- / Menu -->

                <!-- Layout container -->
                <div class="layout-page">
                    <!-- Navbar -->

                    <nav
                        class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
                        id="layout-navbar"
                        >
                        <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                            <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                                <i class="bx bx-menu bx-sm"></i>
                            </a>
                        </div>

                        <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
                            <h:form id="formCorpo">
                                <ui:insert name="titulo">

                                </ui:insert>
                            </h:form>
                            <ul class="navbar-nav flex-row align-items-center ms-auto">
                                <li class="nav-item navbar-dropdown dropdown-user dropdown">
                                    <a class="nav-link dropdown-toggle hide-arrow" href="javascript:void(0);" data-bs-toggle="dropdown">
                                        <div class="avatar avatar-online">
                                            <img src="assets/img/avatars/user2.jpg" class="w-px-40 h-auto rounded-circle" />
<!--                                            <c:if test="{managerLayout.notificacaoDespacho()}">
                                                <span class="notification-badge" >{managerLayout.despachosRecepcionados()}</span>
                                            </c:if>-->
                                        </div>
                                    </a>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        <li>
                                            <a class="dropdown-item" href="#">
                                                <div class="d-flex">
                                                    <div class="flex-shrink-0 me-3">
                                                        <div class="avatar avatar-online">
                                                            <img src="assets/img/avatars/user2.jpg" class="w-px-40 h-auto rounded-circle" />
                                                        </div>
                                                    </div>
                                                    <div class="flex-grow-1">
                                                        <span class="fw-semibold d-block">#{managerLayout.loginName()}</span>
                                                        <!--<small class="text-muted">{managerLayout.usuarioLogado.tipoUsuario.nome}</small>-->
                                                    </div>
                                                </div>
                                            </a>
                                        </li>
                                        <li>
                                            <div class="dropdown-divider"></div>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="conta.xhtml">
                                                <i class="bx bx-user me-2"></i>
                                                <span class="align-middle">Meu Perfil</span>
                                            </a>
                                        </li>
<!--                                        <c:if test="managerLayout.menuConfiguracao()}">
                                            <li>
                                                <a class="dropdown-item" href="administracao.xhtml">
                                                    <i class="bx bx-globe me-2"></i>
                                                    <span class="align-middle">Administração</span>
                                                </a>
                                            </li>
                                        </c:if>-->

<!--                                        <c:if test="{managerLayout.menuConfiguracao()}">
                                            <li>
                                                <a class="dropdown-item" href="configuracao.xhtml">
                                                    <i class="bx bx-cog me-2"></i>
                                                    <span class="align-middle">Configuração</span>
                                                </a>
                                            </li>
                                        </c:if>-->

<!--                                        <c:if test="{managerLayout.notificacaoDespacho()}">
                                            <li>
                                                <a class="dropdown-item" href="pesquisarDespacho.xhtml">
                                                    <i class="bx bx-mail-send me-2"></i>
                                                    <span class="align-middle">Despachos</span>
                                                </a>
                                            </li>
                                        </c:if>-->

                                        <li>
                                            <div class="dropdown-divider"></div>
                                        </li>
                                        <li>
                                            <div class="ui-inputgroup" style="margin-left: 0.5rem;display: flex;justify-content: center;align-items: center">
                                                <!--<p:outputLabel value="Encerrar Sessão"/>-->
                                                <p:commandButton actionListener="#{managerLayout.logout()}" value="Sair" iconPos="right" icon="pi pi-sign-out" style="float:right;background: transparent !important;outline: none !important;color: red;border:none !important;"/>
                                            </div>
                                        </li>

                                    </ul>
                                </li>
                                <!--/ User -->
                            </ul>
                        </div>
                    </nav>

                    <!-- / Navbar -->


                    <!-- Content wrapper -->
                    <div class="content-wrapper">
                        <!-- Content -->

                        <div class="container-xxl flex-grow-1 container-p-y">
                            <div class="row mt-3">
                                <!-- Basic -->
                                <div class="col-md-12 mb-4">
                                    <div class="card">
                                        <h5 class="card-header">
                                            <ui:insert name="subTitulo">

                                            </ui:insert>
                                            <div style="float: right">
                                                <ui:insert name="acoes">

                                                </ui:insert>
                                            </div>
                                            <hr style="margin-top: 30px"/>
                                        </h5>

                                        <div class="card-body">

                                            <ui:insert name="corpo">
                                            </ui:insert>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- / Content -->

                        <!-- Footer -->
                        <!--                        <footer class="content-footer footer bg-footer-theme">
                                                    <div class="container-xxl d-flex flex-wrap justify-content-between py-2 flex-md-row flex-column">
                                                        <div style="text-align: center;display: flex; flex-direction: column; width: 100%">
                                                            <p style="margin-bottom: 0px;font-size: 13px">Copyright © <script>
                                                                document.write(new Date().getFullYear());
                                                                </script> - Todos os Direitos Reservados
                                                            </p>
                                                            <a href="http://foxinline.com.s3-website-us-west-2.amazonaws.com/" style="font-size: 12px;width: 300px;margin: 3px auto">FisioFlow Tech</a>
                                                        </div>
                        
                                                    </div>
                                                </footer>-->
                        <!-- / Footer -->

                        <div class="content-backdrop fade"></div>
                    </div>
                </div>
                <!-- / Layout page -->
            </div>

            <!-- Overlay -->
            <div class="layout-overlay layout-menu-toggle"></div>
        </div>
        <!-- / Layout wrapper -->

        <!-- Core JS -->
        <!-- build:js assets/vendor/js/core.js -->
        <!--<script src="assets/vendor/libs/jquery/jquery.js"></script>-->
        <script src="assets/vendor/libs/popper/popper.js"></script>
        <script src="assets/vendor/js/bootstrap.js"></script>
        <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

        <script src="assets/vendor/js/menu.js"></script>
        <!-- endbuild -->

        <!-- Vendors JS -->
        <script src="assets/vendor/libs/apex-charts/apexcharts.js"></script>

        <!-- Main JS -->
        <script src="assets/js/main.js"></script>

        <!-- Page JS -->
        <script src="assets/js/dashboards-analytics.js"></script>

        <!-- Place this tag in your head or just before your close body tag. -->
        <!--<script async defer src="https://buttons.github.io/buttons.js"></script>-->

        <script src="assets/js/menu-load-active.js"></script>
        <script>
        function calcularAreaAnexo(angulo) {
            var altura = window.screen.height;
            var largura = window.screen.width;
            if (largura == 1366) {
//                                        if (altura == 768) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "480px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 1024) {
//                                        if (altura == 768) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "360px";

//                                            }
            } else if (largura == 1280) {
//                                        if (altura == 720) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "470px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 1366) {
//                                        if (altura == 760) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "510px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 1536) {
                var anexo = document.getElementById("fotoAnexo");
//                                                if (angulo == 90 || angulo == 270) {
//                                                    anexo.style.width = "auto";
//                                                    anexo.style.height = "auto";
//                                                } else {
//                                                    anexo.style.width = "auto";
//                                                    anexo.style.height = "auto";
//                                                }
                if (anexo.offsetWidth > anexo.offsetHeight) {
                    if (angulo == 90 || angulo == 270) {
                        anexo.style.width = anexo.style.height;
                        anexo.style.height = anexo.style.width;
                    } else {
                        anexo.style.height = "500px";
                        anexo.style.width = "auto";
                    }

                } else {
                    if (angulo == 90 || angulo == 270) {
                        anexo.style.width = anexo.style.height;
                        anexo.style.height = anexo.style.width;
                    } else {
                        anexo.style.width = "500px";
                        anexo.style.height = "auto";
                    }

                }


                console.log("angulo" + angulo);
                console.log(anexo.style);
            } else if (largura == 1600) {
//                                        if (altura == 900) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "600px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 1920) {
//                                        if (altura == 1080) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "630px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 2160) {
//                                        if (altura == 1440) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "660px";
                anexo.style.width = "100%";

//                                            }
            } else if (largura == 2048) {
//                                        if (altura == 1080) {
                var anexo = document.getElementById("fotoAnexo");
                anexo.style.height = "660px";
                anexo.style.width = "100%";
//                                        }
            }
            console.log(largura);
        }
//                                        window.onload = calcularAreaAnexo();

        var currentAngle = 0;
        function instanciarAngulo() {
            currentAngle = 0;
        }




        function carregarCanvas() {
            let canvas = document.getElementsByClassName("view-canvas")[0];
//                                            let context = canvas.getContext("2d");
            let imagemOriginal = document.getElementById("fotoAnexo");
//                                            context.clearRect(0, 0, canvas.width, canvas.height);
            if (!canvas.getContext) {
                console.error("Canvas not supported.");
                return;
            }
            let anguloFoto = document.getElementById("valorRotacao").value;
            currentAngle = parseInt(anguloFoto);
            let imagem = new Image();
            imagem.src = imagemOriginal.src;
            console.log(imagemOriginal.src);
            console.log(imagem.src);

            const LARGURA_MAXIMA = window.innerWidth * 0.8; // Define a largura máxima da imagem
            const ALTURA_MAXIMA = window.innerHeight * 0.8; // Define a altura máxima da imagem

            imagem.onload = function () {
//                                                canvas.width = imagem.width;
//                                                canvas.height = imagem.height;
//                                                console.log("carregou o canvas");
//                                                context.drawImage(imagem, 0, 0);

                let larguraTela = window.innerWidth;
                let alturaTela = window.innerHeight;
                let proporcao = Math.min(larguraTela / imagem.width, alturaTela / imagem.height, LARGURA_MAXIMA / imagem.width, ALTURA_MAXIMA / imagem.height);
                let proporcaoVirado = Math.min(larguraTela / imagem.height, alturaTela / imagem.width, LARGURA_MAXIMA / imagem.height, ALTURA_MAXIMA / imagem.width);
                let larguraImagem = imagem.width * proporcao;
                let alturaImagem = imagem.height * proporcao;
                let larguraImagemVirado = imagem.width * proporcaoVirado;
                let alturaImagemVirado = imagem.height * proporcaoVirado;
                if (currentAngle == 90) {
                    canvas.width = alturaImagemVirado;
                    canvas.height = larguraImagemVirado;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(0, -alturaImagemVirado);
                    context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
                } else if (currentAngle == 180) {
                    canvas.width = larguraImagem;
                    canvas.height = alturaImagem;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(-larguraImagem, -alturaImagem);
                    context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
                } else if (currentAngle == 270) {
                    canvas.width = alturaImagemVirado;
                    canvas.height = larguraImagemVirado;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(-larguraImagemVirado, 0);
                    context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
                } else {
                    canvas.width = larguraImagem;
                    canvas.height = alturaImagem;
                    let context = canvas.getContext('2d');
                    context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
                }
            };
//                                            return context;
        }


        function carregarCanvasEditar() {
            let canvas = document.getElementsByClassName("view-canvasEditar")[0];
//                                            let context = canvas.getContext("2d");
            let imagemOriginal = document.getElementById("fotoAnexoEditar");
//                                            context.clearRect(0, 0, canvas.width, canvas.height);
            if (!canvas.getContext) {
                console.error("Canvas not supported.");
                return;
            }
            let anguloFoto = document.getElementById("valorRotacaoEditar").value;
            currentAngle = parseInt(anguloFoto);
            console.log(currentAngle);
            let imagem = new Image();
            imagem.src = imagemOriginal.src;
            console.log(imagemOriginal.src);
            console.log(imagem.src);

            const LARGURA_MAXIMA = window.innerWidth * 0.8; // Define a largura máxima da imagem
            const ALTURA_MAXIMA = window.innerHeight * 0.6; // Define a altura máxima da imagem

            imagem.onload = function () {
//                                                canvas.width = imagem.width;
//                                                canvas.height = imagem.height;
//                                                console.log("carregou o canvas");
//                                                context.drawImage(imagem, 0, 0);

                let larguraTela = window.innerWidth;
                let alturaTela = window.innerHeight;
                let proporcao = Math.min(larguraTela / imagem.width, alturaTela / imagem.height, LARGURA_MAXIMA / imagem.width, ALTURA_MAXIMA / imagem.height);
                let proporcaoVirado = Math.min(larguraTela / imagem.height, alturaTela / imagem.width, LARGURA_MAXIMA / imagem.height, ALTURA_MAXIMA / imagem.width);
                let larguraImagem = imagem.width * proporcao;
                let alturaImagem = imagem.height * proporcao;
                let larguraImagemVirado = imagem.width * proporcaoVirado;
                let alturaImagemVirado = imagem.height * proporcaoVirado;
                if (currentAngle == 90) {
                    canvas.width = alturaImagemVirado;
                    canvas.height = larguraImagemVirado;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(0, -alturaImagemVirado);
                    context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
                } else if (currentAngle == 180) {
                    canvas.width = larguraImagem;
                    canvas.height = alturaImagem;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(-larguraImagem, -alturaImagem);
                    context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
                } else if (currentAngle == 270) {
                    canvas.width = alturaImagemVirado;
                    canvas.height = larguraImagemVirado;
                    let context = canvas.getContext('2d');
                    context.rotate((Math.PI / 180) * currentAngle);
                    context.translate(-larguraImagemVirado, 0);
                    context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
                } else {
                    canvas.width = larguraImagem;
                    canvas.height = alturaImagem;
                    let context = canvas.getContext('2d');
                    context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
                }


            };
//                                            return context;
        }
//                                        let canvas = document.getElementsByClassName("view-canvas")[0];
//                                        let context = canvas.getContext('2d');

        function girarCanvas(graus, direcao) {
            let canvas = document.getElementsByClassName("view-canvas")[0];
            let context = canvas.getContext('2d');



            // Converte graus em radianos
            var radianos = graus * Math.PI / 180;

            if (direcao == "direita") {
                radianos = -radianos; // inverte o sinal do ângulo para girar para a direita
            }
            let larguraTela = window.innerWidth;
            let alturaTela = window.innerHeight;
            const LARGURA_MAXIMA = window.innerWidth * 0.8; // Define a largura máxima da imagem
            const ALTURA_MAXIMA = window.innerHeight * 0.6; // Define a altura máxima da imagem
            // Calcula a escala apropriada para manter a proporção
            let proporcao = Math.min(larguraTela / canvas.width, alturaTela / canvas.height, LARGURA_MAXIMA / canvas.width, ALTURA_MAXIMA / canvas.height);

            // Define a matriz de transformação
            context.setTransform(
                    Math.cos(radianos) * proporcao, Math.sin(radianos) * proporcao,
                    -Math.sin(radianos) * proporcao, Math.cos(radianos) * proporcao,
                    canvas.width / 2, canvas.height / 2
                    );

            // Desenha o conteúdo do canvas girado na nova posição
//                                            context.clearRect(0, 0, canvas.width, canvas.height);
            context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2);
        }






        function rotate(direction) {
            let canvas = document.getElementsByClassName("view-canvasEditar")[0];
            let context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);
            let newAngle = currentAngle;
            let imagemOriginal = document.getElementById("fotoAnexoEditar");
            let imagem = new Image();
            imagem.src = imagemOriginal.src;
            const LARGURA_MAXIMA = window.innerWidth * 0.8; // Define a largura máxima da imagem
            const ALTURA_MAXIMA = window.innerHeight * 0.6;
            let larguraTela = window.innerWidth;
            let alturaTela = window.innerHeight;
            let proporcao = Math.min(larguraTela / imagem.width, alturaTela / imagem.height, LARGURA_MAXIMA / imagem.width, ALTURA_MAXIMA / imagem.height);
            let proporcaoVirado = Math.min(larguraTela / imagem.height, alturaTela / imagem.width, LARGURA_MAXIMA / imagem.height, ALTURA_MAXIMA / imagem.width);
            let larguraImagem = imagem.width * proporcao;
            let alturaImagem = imagem.height * proporcao;
            let larguraImagemVirado = imagem.width * proporcaoVirado;
            let alturaImagemVirado = imagem.height * proporcaoVirado;
            if (direction == 'left') {
                if (newAngle > 0) {
                    newAngle = newAngle - 90;
                } else {
                    newAngle = 270;
                }
                currentAngle = 0;
                currentAngle = newAngle;
            }
            if (direction == 'right') {
                if (270 > newAngle) {
                    console.log("ang antes:" + newAngle);
                    if (newAngle == 0) {
                        newAngle = 90;
                    } else if (newAngle == 90) {
                        newAngle = 180;
                    } else {
                        newAngle = 270;
                    }
                } else {
                    newAngle = 0;
                }
                console.log("new angle" + newAngle);
                currentAngle = 0;
                currentAngle = newAngle;
            }
            //Draw origin
            context.save();

            if (newAngle === 0) {
                canvas.width = larguraImagem;
                canvas.height = alturaImagem;
                context.resetTransform();
                context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
            } else if (newAngle === 90) {
                canvas.width = alturaImagemVirado;
                canvas.height = larguraImagemVirado;
                context.rotate((Math.PI / 180) * newAngle);
                context.translate(0, -alturaImagemVirado);
                context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
            } else if (newAngle === 180) {
                canvas.width = larguraImagem;
                canvas.height = alturaImagem;
                context.rotate((Math.PI / 180) * newAngle);
                context.translate(-larguraImagem, -alturaImagem);
                context.drawImage(imagem, 0, 0, larguraImagem, alturaImagem);
            } else if (newAngle === 270) {
                canvas.width = alturaImagemVirado;
                canvas.height = larguraImagemVirado;
                context.rotate((Math.PI / 180) * newAngle);
                context.translate(-larguraImagemVirado, 0);
                context.drawImage(imagem, 0, 0, larguraImagemVirado, alturaImagemVirado);
            }


            context.restore();

        }


        function salvarImagem() {
            console.log(currentAngle);
            document.getElementById("valorRotacaoEditar").value = currentAngle;
//                                            return currentAngle;
//                                            let canvas = document.getElementsByClassName("view-canvasEditar")[0];
//                                            let context = canvas.getContext("2d");
//                                            let transform = context.currentTransform;
//                                            let sx = transform.a;
//                                            let sy = transform.d;
//                                            let angle = Math.atan2(transform.b, transform.a);
//                                            let rotation = angle * (180 / Math.PI);
//                                            let imageData = canvas.toDataURL();
//                                            let imageObj = {
//                                                rotation: currentAngle,
//                                                dataUrl: imageData
//                                            };
//                                            let imageStr = JSON.stringify(imageObj); 
//                                            console.log(imageStr);
//                                            console.log(imageData);
//                                            document.getElementById('fotoAnexoEditar').value = imageStr;

        }

        function rotateImageRight() {
            currentAngle = (currentAngle + 90) % 360;
            var image = document.getElementById("fotoAnexo");
            image.style.transform = "rotate(" + currentAngle + "deg)";
            calcularAreaAnexo(currentAngle);
        }

        function rotateImageLeft() {
            currentAngle = (currentAngle - 90 + 360) % 360;
            var image = document.getElementById("fotoAnexo");
            image.style.transform = "rotate(" + currentAngle + "deg)";
            calcularAreaAnexo(currentAngle);
        }


        </script>

        <script>
            $ = jQuery;
//                                    $.noConflict();

            function initPhoto() {
                initPhotoSwipeFromDOM('.my-simple-gallery');
            }

            function desabilitarBotoes(disable) {
                $('.ui-button').attr("disabled", disable);
                if (disable) {
                    PF('statusDialog').show();
                } else {
                    PF('statusDialog').hide();
                }
            }

            $(document).ready(function () {

                $(window).on('load', function () {
                    PF('statusDialog').show();
                    setTimeout(PF('statusDialog').hide(), 1000);
                });

                //PF('statusDialog').show();
                //setTimeout(function(){ PF('statusDialog').hide() }, 1000);

            });

            //window.galeriaEditar.init("galeriaEditar", function() {console.log("OK")});
        </script>

        <script>
            PrimeFaces.locales['pt'] = {
                closeText: 'Fechar',
                prevText: 'Anterior',
                nextText: 'Próximo',
                currentText: 'Começo',
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S'],
                weekHeader: 'Semana',
                firstDay: 0,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: '',
                timeOnlyTitle: 'Só Horas',
                timeText: 'Tempo',
                hourText: 'Hora',
                minuteText: 'Minuto',
                secondText: 'Segundo',
                ampm: false,
                month: 'Mês',
                week: 'Semana',
                day: 'Dia',
                allDayText: 'Todo o Dia'
            };
        </script>

    </h:body>
</html>

